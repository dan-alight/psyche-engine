"""initial schema

Revision ID: 836656fa5999
Revises: 
Create Date: 2025-06-25 08:37:29.146890

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '836656fa5999'
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aiprovider',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('base_url', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('conversation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('journalentry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('apikey',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key_value', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['aiprovider.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('provider_id', 'key_value', name='uq_apikey_provider_key_value'),
    sa.UniqueConstraint('provider_id', 'name', name='uq_apikey_provider_name')
    )
    with op.batch_alter_table('apikey', schema=None) as batch_op:
        batch_op.create_index('ix_apikey_active_provider_unique', ['provider_id'], unique=True, postgresql_where=sa.text('active = true'), sqlite_where=sa.text('active = 1'))

    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('generated_by', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('message')
    with op.batch_alter_table('apikey', schema=None) as batch_op:
        batch_op.drop_index('ix_apikey_active_provider_unique', postgresql_where=sa.text('active = true'), sqlite_where=sa.text('active = 1'))

    op.drop_table('apikey')
    op.drop_table('journalentry')
    op.drop_table('conversation')
    op.drop_table('aiprovider')
    # ### end Alembic commands ###
